generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  first_name      String
  last_name       String
  email           String            @unique @db.VarChar(255)
  password        String
  address         String?           @db.VarChar(255)
  Address         Address[]
  DeliveryPartner DeliveryPartner[]
  SkinProfile     SkinProfile[]
  role            Role              @default(USER)
  avatar          String?           @default("/uploads/avatar2.png")

  @@map("User")
}

model Product {
  id                Int     @id @default(autoincrement())
  name              String
  price             Decimal
  brand             String
  category          String
  product_image_url String
  description       String
  skin_type         String
  stock_quantity    Int

  @@map("Product")
}

model Cart {
  id         Int        @id @default(autoincrement())
  totalPrice Float
  cartItems  CartItem[]
}

model CartItem {
  id       Int    @id @default(autoincrement())
  name     String
  price    Float
  quantity Int
  cartId   Int
  cart     Cart   @relation(fields: [cartId], references: [id])
}

model SkinProfile {
  id         Int     @id @default(autoincrement())
  skinType   String
  user_id    Int?
  first_name String? @db.VarChar(255)
  last_name  String? @db.VarChar(255)
  User       User?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Recommendation {
  id Int @id @default(autoincrement())
}

model ProductManager {
  id            Int     @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String  @unique
  password      String
  contactNumber String
  loginStatus   Boolean
}

model OrderItems {
  id       Int   @id @default(autoincrement())
  quantity Int
  subtotal Float
}

model Payment {
  id          Int      @id @default(autoincrement())
  status      String
  amount      Float
  paymentDate DateTime
}

model Address {
  id      Int    @id @default(autoincrement())
  street  String
  city    String
  user_id Int?
  User    User?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Order {
  id          Int      @id @default(autoincrement())
  date        DateTime
  totalAmount Float
  status      String
}

model Shipping {
  id           Int       @id @default(autoincrement())
  status       String
  shippingDate DateTime
  estimateDate DateTime
  actualDate   DateTime?
}

model Admin {
  id            Int     @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String  @unique
  password      String
  contactNumber String
  loginStatus   Boolean
}

model DeliveryPartner {
  id          Int    @id @default(autoincrement())
  fullName    String
  phoneNumber String
  user_id     Int?
  User        User?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Delivery {
  id     Int      @id @default(autoincrement())
  date   DateTime
  notes  String
  status String
}

enum Role {
  ADMIN
  USER
  PRODUCT_MANAGER
}
